{"version":3,"sources":["utils/utils.ts","components/Button/Button.tsx","contexts/Form.tsx","hooks/useForm.ts","components/Form/utils.ts","components/Form/Item.tsx","components/Form/List.tsx","components/Form/Form.tsx","components/Input/Input.tsx","hooks/useBoolean.ts","assets/eye.svg","assets/eye-off.svg","components/PasswordInput/PasswordInput.tsx","components/login/LoginForm.tsx","utils/token.ts","hooks/useToken.ts","contexts/Token.tsx","utils/request.ts","hooks/useRequest.ts","hooks/useLogin.ts","assets/check.svg","assets/cross.svg","components/Alert/Alert.tsx","assets/logo.svg","pages/login.tsx","components/Navbar/Navbar.tsx","components/schemas/List/List.tsx","utils/localStorageSchemas.ts","hooks/schemas/useGetSchemas.ts","pages/schemas/index.tsx","assets/arrow.svg","components/Accordion/Accordion.tsx","hooks/useOnOutsideClick.ts","components/Select/Select.tsx","components/schemas[new]/FieldTypeSelect/utils.ts","components/schemas[new]/FieldTypeSelect/FieldTypeSelect.tsx","components/schemas[new]/FieldOptionsList/OptionsList.tsx","components/schemas[new]/FieldRequiredItems.tsx","components/NumberInput.tsx","components/InlineLabel/InlineLabel.tsx","components/Switch/Switch.tsx","components/schemas[new]/NumberValidation.tsx","components/schemas[new]/PhoneValidation.tsx","components/schemas[new]/SelectValidation.tsx","components/schemas[new]/StringValidation/StringValidation.tsx","components/schemas[new]/CheckboxValidation.tsx","components/schemas[new]/SchemaField/SchemaField.tsx","components/schemas[new]/SchemaField/utils.ts","assets/delete.svg","components/schemas[new]/FieldsAccordion/FieldsAccordion.tsx","components/schemas[new]/NewSchemaForm/NewSchemaForm.tsx","hooks/schemas/useCreateSchema.ts","pages/schemas/new.tsx","hooks/schemas/useGetSchema.ts","assets/checkmark.svg","components/Checkbox/Checkbox.tsx","components/schemas[id]/FieldFormItem.tsx","components/schemas[id]/FormFromSchema.tsx","pages/schemas/[id].tsx","components/AuthedRoute.tsx","App.tsx","index.tsx"],"names":["withoutFalsy","arr","filter","e","joinClassNames","classNames","join","flatObj","obj","parent","res","key","propName","Array","isArray","sleep","ms","Promise","setTimeout","Button","type","htmlType","className","props","FormContext","createContext","useFormContext","useContext","FormProvider","children","form","Provider","value","isNoErrors","errors","Object","values","every","err","useForm","initialValues","initialErrors","initialTouched","validate","useState","setValues","setErrors","touched","setTouched","setValue","path","prev","setByPath","cloneObj","touchField","helpers","changeHandler","name","target","isFormValid","validateErrs","setError","validateString","schema","errorMessage","min","length","max","pattern","isCompletelyMatches","RegExp","validateNumber","isNaN","validatePhoneNumber","phone","string","regExp","match","FormItem","label","trigger","valuePropName","invalidPropName","getByPath","error","isTouched","useEffect","isEmptyValue","required","validateSchema","isError","controlledChildren","cloneElement","bind","FormList","items","remove","idx","clone","splice","push","item","Form","onSubmit","onFail","onValuesChange","preventDefault","keys","forEach","Item","List","Input","forwardRef","ref","isInvalid","useBoolean","initialValue","on","off","toggle","actions","PasswordInput","isPassword","setPassword","src","eyeOff","eye","alt","onClick","LoginForm","controls","formProps","placeholder","TOKEN_KEY","getUserToken","localStorage","getItem","useToken","token","setToken","setItem","setUserToken","Context","useTokenContext","TokenProvider","api","axios","create","baseURL","process","request","config","a","headers","Authorization","resp","data","INITIAL_STATE","response","isLoading","useRequest","axiosRequestConfig","onError","onSuccess","state","setState","req","useLogin","url","method","Alert","check","cross","LoginPage","history","useHistory","loginState","login","access_token","logo","username","password","disabled","Link","to","isActive","useLocation","pathname","Navbar","SchemasList","schemas","map","id","getSchemasFromLocalStorage","rawLocalSchemas","JSON","parse","setSchemasToLocalStorage","updatedSchemas","stringify","initialState","useGetSchemas","SchemasPage","getSchemas","Accordion","defaultOpened","openedItems","setOpenedItems","isOpened","includes","React","i","closeItem","openItem","title","extra","arrow","useOnOutsideClick","onOutsideClick","handleClick","current","contains","document","addEventListener","removeEventListener","OptionItem","isSelected","Select","options","selectedValue","selected","onSelect","useRef","setOpened","find","o","option","translateFieldType","TYPES","FieldTypeSelect","OptionsList","basePath","optionsErrors","isInvalidOption","some","isRemoveAvailable","isDuplicate","val","toLowerCase","FieldRequiredItems","isSelect","NumberInput","onChange","currentTarget","InlineLabel","Switch","checked","onCheck","NumberValidation","PhoneValidation","SelectValidation","StringValidation","CheckboxValidation","SchemaFieldComponent","ValidationItems","getValidationItemsByType","FieldHeader","index","field","FieldsAccordion","fields","removeField","fieldErrs","entries","toString","deleteIco","SchemaField","BLANK_FIELD","validation","INITIAL_VALUES","NewSchemaForm","isInvalidField","errs","useCreateSchema","apiSchema","Date","now","Error","NewSchemaPage","createSchema","useGetSchema","s","Checkbox","checkmark","placeholderFromLabel","FieldFormItem","FormFromSchema","reduce","acc","undefined","SchemaPage","getSchema","params","useRouteMatch","isValid","setIsValid","setIsInvalid","message","AuthedRoute","App","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5bc3baaf.chunk.js","sourcesContent":["export type Falsy = false | 0 | \"\" | null | undefined;\n\nexport const withoutFalsy = <T>(arr: T[]): T[] => arr.filter((e) => !!e);\n\ntype RawClassName = string | number | Falsy;\n\nexport const joinClassNames = (...classNames: RawClassName[]): string =>\n  withoutFalsy(classNames).join(\" \");\n\nexport const isEmpty = <T>(arr: T[]): boolean => !!arr.length;\n\nexport const flatObj = (\n  obj: Record<string, any>,\n  parent: string | null = null,\n  res: Record<string, any> = {}\n) => {\n  for (let key in obj) {\n    let propName = parent\n      ? Array.isArray(obj)\n        ? `${parent}[${key}]`\n        : `${parent}.${key}`\n      : key;\n    if (typeof obj[key] === \"object\") {\n      flatObj(obj[key], propName, res);\n    } else {\n      res[propName] = obj[key];\n    }\n  }\n  return res;\n};\n\nexport const sleep = (ms: number) => new Promise((res) => setTimeout(res, ms));\n","import { ButtonHTMLAttributes, FC, HTMLProps } from \"react\";\nimport { joinClassNames } from \"utils/utils\";\nimport \"./styles.css\";\n\ntype ButtonType = \"primary\" | \"secondary\";\n\ntype HTMLButtonType = ButtonHTMLAttributes<HTMLButtonElement>[\"type\"];\n\ntype Props = HTMLProps<HTMLButtonElement> & {\n  type?: ButtonType;\n  htmlType?: HTMLButtonType;\n};\n\nconst Button: FC<Props> = ({\n  type = \"primary\",\n  htmlType,\n  className,\n  ...props\n}: Props) => {\n  return (\n    <button\n      type={htmlType}\n      className={joinClassNames(\n        \"button\",\n        className,\n        type === \"primary\" && \"button_primary\",\n        type === \"secondary\" && \"button_secondary\"\n      )}\n      {...props}\n    />\n  );\n};\n\nexport default Button;\n","import { IForm } from \"hooks/useForm\";\nimport { createContext, useContext } from \"react\";\n\nconst FormContext = createContext<IForm<any>>({} as any);\n\nexport const useFormContext = <F extends any>() =>\n  useContext(FormContext) as IForm<F>;\n\ntype FormProviderProps<V> = IForm<V> & {\n  children: React.ReactNode;\n};\n\nexport const FormProvider = <V extends Record<string, unknown>>({\n  children,\n  ...form\n}: FormProviderProps<V>) => {\n  return <FormContext.Provider value={form}>{children}</FormContext.Provider>;\n};\n","import { ChangeEvent, useState } from \"react\";\nimport { TypeNestedValues, ValueOf } from \"types/types\";\nimport { flatObj } from \"utils/utils\";\nimport setByPath from \"lodash.set\";\nimport cloneObj from \"lodash.clonedeep\";\n\nexport type FormErrors<V> = Partial<TypeNestedValues<V, string>>;\nexport type FormTouched<V> = Partial<TypeNestedValues<V, boolean>>;\n\ntype ChangeValue = ChangeEvent<HTMLInputElement> | boolean | string | number;\n\nexport type FormHelpers<V> = {\n  isFormValid: () => boolean;\n  changeHandler: (name: keyof V, value: ChangeValue) => void;\n  setValue: (name: keyof V, value: V[keyof V]) => void;\n  setError: (name: keyof V, err: string) => void;\n  touchField: (name: keyof V, value: boolean) => void;\n};\n\nexport type IForm<V> = {\n  values: V;\n  touched: FormTouched<V>;\n  errors: FormErrors<V>;\n  helpers: FormHelpers<V>;\n};\n\ntype Args<V> = {\n  initialValues: V;\n  initialErrors?: FormErrors<V>;\n  initialTouched?: {};\n  validate?: (values: V) => FormErrors<V>;\n};\n\nconst useForm = <V extends Record<string, unknown>>({\n  initialValues,\n  initialErrors = {},\n  initialTouched = {},\n  validate,\n}: Args<V>): IForm<V> => {\n  const [values, setValues] = useState<V>(initialValues);\n  const [errors, setErrors] = useState<FormErrors<V>>(initialErrors);\n  const [touched, setTouched] = useState<FormTouched<V>>(initialTouched);\n\n  const setValue = (path: keyof V, value: ValueOf<V>) => {\n    setValues((prev) => setByPath(cloneObj(prev), path, value));\n  };\n\n  const setError = (path: keyof V, err: string) =>\n    setErrors((prev) => setByPath(cloneObj(prev), path, err));\n\n  const touchField = (path: keyof V, value: boolean) =>\n    setTouched((prev) => setByPath(cloneObj(prev), path, value));\n\n  const changeHandler = (name: keyof V, value: ChangeValue) => {\n    touchField(name, true);\n\n    switch (typeof value) {\n      case \"boolean\":\n        setValue(name, value as ValueOf<V>); // switch/checkbox\n        break;\n      case \"string\":\n        setValue(name, value as ValueOf<V>); // select\n        break;\n      case \"number\":\n        setValue(name, value as ValueOf<V>); // number input\n        break;\n      default:\n        setValue(name, value.target.value as ValueOf<V>); // input\n        break;\n    }\n  };\n\n  const isFormValid = () => {\n    if (validate) {\n      const validateErrs = validate(values);\n      setErrors((prev) => ({ ...prev, ...validateErrs }));\n\n      return isNoErrors(validateErrs);\n    }\n\n    return isNoErrors(errors);\n  };\n\n  const helpers: FormHelpers<V> = {\n    changeHandler,\n    isFormValid,\n    setValue,\n    setError,\n    touchField,\n  };\n\n  return {\n    touched,\n    values,\n    errors,\n    helpers,\n  };\n};\n\nfunction isNoErrors(errors: Record<string, unknown>): boolean {\n  // flatObj for nested validations\n  return Object.values(flatObj(errors)).every((err) => err === \"\");\n}\n\nexport default useForm;\n","import { NumberSchema, StringSchema } from \"types/schema\";\nimport { FormItemSchema } from \"./Item\";\n\nexport const validateSchema = (\n  schema: FormItemSchema,\n  value: string | number | boolean | undefined\n): string => {\n  const isEmptyValue =\n    typeof value === \"undefined\" || value === \"\" || value === false;\n\n  if (schema.required && isEmptyValue) return \"Заполните поле\";\n  if (!schema.required && isEmptyValue) return \"\";\n\n  let error = \"\";\n\n  switch (schema.type) {\n    case \"string\":\n      error = validateString((value as string) ?? \"\", schema);\n      error = schema.validate?.(value as string) || error;\n      break;\n    case \"number\":\n      error = validateNumber(value as number, schema);\n      error = schema.validate?.(value as number) || error;\n      break;\n    case \"phone\":\n      error = validatePhoneNumber((value as string) ?? \"\");\n      error = schema.validate?.(value as string) || error;\n      break;\n    case \"select\":\n      error = schema.validate?.(value as string) || error;\n      break;\n  }\n\n  return error;\n};\n\nexport const validateString = (value: string, schema: StringSchema): string => {\n  let errorMessage = \"\";\n\n  if (schema.min && value.length < schema.min) {\n    errorMessage = `Минимум ${schema.min} символов`;\n  }\n\n  if (schema.max && value.length > schema.max) {\n    errorMessage = `Максимум ${schema.max} символов`;\n  }\n\n  if (schema.pattern) {\n    const regExp = new RegExp(schema.pattern);\n    if (!isCompletelyMatches(value, regExp)) {\n      errorMessage = \"Значение не соответствует шаблону ввода\";\n    }\n  }\n\n  return errorMessage;\n};\n\nexport const validateNumber = (value: number, schema: NumberSchema): string => {\n  let errorMessage = \"\";\n\n  if (isNaN(value)) {\n    errorMessage = \"Введите число\";\n  }\n\n  if (!!schema.min && value < schema.min) {\n    errorMessage = `Минимум ${schema.min}`;\n  }\n\n  if (!!schema.max && value > schema.max) {\n    errorMessage = `Максимум ${schema.max}`;\n  }\n\n  return errorMessage;\n};\n\nexport const validatePhoneNumber = (phone: string): string => {\n  const regExp = /(\\+7|8)\\s\\(\\d{3}\\)\\s\\d{3}-\\d{2}-\\d{2}/;\n  return isCompletelyMatches(phone, regExp)\n    ? \"\"\n    : \"Введите валидный номер телефона\";\n};\n\nfunction isCompletelyMatches(string: string, regExp: RegExp) {\n  const [regExpMatched] = string.match(regExp) ?? [];\n  return regExpMatched === string;\n}\n","import { cloneElement, FC, ReactElement, useEffect } from \"react\";\nimport { useFormContext } from \"contexts/Form\";\nimport { joinClassNames } from \"utils/utils\";\nimport {\n  CheckboxSchema,\n  NumberSchema,\n  PhoneSchema,\n  SelectSchema,\n  StringSchema,\n} from \"types/schema\";\nimport getByPath from \"lodash.get\";\nimport { validateSchema } from \"./utils\";\n\ntype SchemaType = \"string\" | \"phone\" | \"number\" | \"select\" | \"checkbox\";\n\ntype Validate<V> = {\n  validate?: (value: V) => string;\n};\n\ntype TypeWithSchema<T extends SchemaType, S> = { type: T } & S;\n\nexport type FormItemSchema =\n  | (TypeWithSchema<\"string\", StringSchema> & Validate<string>)\n  | (TypeWithSchema<\"phone\", PhoneSchema> & Validate<string>)\n  | (TypeWithSchema<\"number\", NumberSchema> & Validate<number>)\n  | (TypeWithSchema<\"select\", SelectSchema> & Validate<string>)\n  | (TypeWithSchema<\"checkbox\", CheckboxSchema> & Validate<boolean>);\n\ntype Props = {\n  name: string;\n  label?: string;\n  schema?: FormItemSchema;\n  trigger?: string;\n  valuePropName?: string;\n  invalidPropName?: string;\n  className?: string;\n  children: ReactElement;\n};\n\nconst FormItem: FC<Props> = ({\n  name,\n  schema,\n  label,\n  children,\n  className,\n  trigger = \"onChange\",\n  valuePropName = \"value\",\n  invalidPropName = \"isInvalid\",\n}) => {\n  const { values, errors, touched, helpers } = useFormContext<any>();\n\n  const value = getByPath(values, name);\n  const error = getByPath(errors, name);\n  const isTouched = getByPath(touched, name);\n\n  useEffect(() => {\n    if (schema) helpers.setError(name, validateSchema(schema, value));\n  }, [value]); // to avoid extra validations\n\n  const isError = error && isTouched;\n\n  const controlledChildren = cloneElement(children, {\n    ...children.props,\n    [valuePropName]: value,\n    [invalidPropName]: isError,\n    [trigger]: helpers.changeHandler.bind(null, name),\n  });\n\n  return (\n    <div className={joinClassNames(\"form-item\", className)}>\n      <label\n        className={joinClassNames(\n          \"form-item__label\",\n          isError && \"form-item__label_error\",\n          label && schema?.required && \"form-item__label_required\"\n        )}\n      >\n        {label}\n      </label>\n      {controlledChildren}\n      {isError && <div className=\"form-item__error\">{error}</div>}\n    </div>\n  );\n};\n\nexport default FormItem;\n","import { useFormContext } from \"contexts/Form\";\nimport getByPath from \"lodash.get\";\n\ntype ListHelpers<V> = {\n  items: V[];\n  push: (item: V) => void;\n  remove: (idx: number) => void;\n};\n\ntype ListProps<V> = {\n  name: string;\n  children: (helpers: ListHelpers<V>) => JSX.Element;\n};\n\nconst FormList = <V extends unknown>({ name, children }: ListProps<V>) => {\n  const { values, helpers } = useFormContext<any>();\n  const items = getByPath(values, name);\n\n  const remove = (idx: number): void => {\n    const clone = [...items] as V[];\n    clone.splice(idx, 1);\n\n    helpers.setError(name, \"\");\n    helpers.setValue(name, clone);\n    helpers.touchField(name, false);\n  };\n\n  const push = (item: V): void => {\n    helpers.setValue(name, [...items, item] as V[]);\n  };\n\n  return children({ items, remove, push });\n};\n\nexport default FormList;\n","import { FormEvent, useEffect } from \"react\";\nimport { FormProvider } from \"contexts/Form\";\nimport useForm, { FormErrors, IForm } from \"hooks/useForm\";\nimport { flatObj, joinClassNames } from \"utils/utils\";\nimport FormItem from \"./Item\";\nimport FormList from \"./List\";\nimport \"./styles.css\";\n\nexport type FormProps<V> = {\n  initialValues: V;\n  initialErrors?: FormErrors<V>;\n  className?: string;\n  children: (form: IForm<V>) => React.ReactNode;\n  validate?: (values: V) => FormErrors<V>;\n  onSubmit?: (values: V) => void;\n  onFail?: (errors: FormErrors<V>) => void;\n  onValuesChange?: (values: V) => void;\n};\n\nconst Form = <V extends Record<string, unknown>>({\n  initialErrors = {},\n  initialValues,\n  className,\n  children,\n  validate,\n  onSubmit,\n  onFail,\n  onValuesChange,\n}: FormProps<V>) => {\n  const form = useForm<V>({\n    initialValues,\n    initialErrors,\n    validate,\n  });\n\n  const { values, errors, helpers } = form;\n\n  useEffect(() => {\n    onValuesChange?.(values);\n  }, [values]);\n\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n\n    const paths = Object.keys(flatObj(values));\n    paths.forEach((path) => helpers.touchField(path, true));\n\n    const isValid = helpers.isFormValid();\n    if (isValid) {\n      onSubmit?.(values);\n    } else {\n      onFail?.(errors);\n    }\n  };\n\n  return (\n    <form\n      className={joinClassNames(\"form\", className)}\n      onSubmit={submitHandler}\n    >\n      <FormProvider {...form}>{children(form)}</FormProvider>\n    </form>\n  );\n};\n\nForm.Item = FormItem;\nForm.List = FormList;\n\nexport default Form;\n","import { forwardRef, InputHTMLAttributes } from \"react\";\nimport { joinClassNames } from \"utils/utils\";\nimport \"./styles.css\";\n\nexport type InputProps = InputHTMLAttributes<HTMLInputElement> & {\n  isInvalid?: boolean;\n};\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(\n  ({ className, isInvalid, ...props }, ref) => {\n    return (\n      <input\n        {...props}\n        ref={ref}\n        className={joinClassNames(\n          \"input\",\n          className,\n          isInvalid && \"input_error\"\n        )}\n      />\n    );\n  }\n);\n\nexport default Input;\n","import { useState } from \"react\";\n\ntype BooleanActions = {\n  on: () => void;\n  off: () => void;\n  toggle: () => void;\n};\n\nconst useBoolean = (initialValue = false): [boolean, BooleanActions] => {\n  const [value, setValue] = useState(initialValue);\n\n  const on = () => setValue(true);\n  const off = () => setValue(false);\n  const toggle = () => setValue((prev) => !prev);\n\n  const actions: BooleanActions = {\n    on,\n    off,\n    toggle,\n  };\n\n  return [value, actions];\n};\n\nexport default useBoolean;\n","export default __webpack_public_path__ + \"static/media/eye.9debb862.svg\";","export default __webpack_public_path__ + \"static/media/eye-off.b633b772.svg\";","import useBoolean from \"hooks/useBoolean\";\nimport Input, { InputProps } from \"../Input/Input\";\nimport eye from \"assets/eye.svg\";\nimport eyeOff from \"assets/eye-off.svg\";\nimport \"./styles.css\";\n\ntype Props = Omit<InputProps, \"type\">;\n\nconst PasswordInput = (props: Props) => {\n  const [isPassword, setPassword] = useBoolean(true);\n\n  return (\n    <div className=\"password-input\">\n      <Input type={isPassword ? \"password\" : \"text\"} {...props} />\n      <img\n        className=\"password-input__eye\"\n        src={isPassword ? eyeOff : eye}\n        alt={isPassword ? \"Show password\" : \"Hide password\"}\n        onClick={setPassword.toggle}\n      />\n    </div>\n  );\n};\n\nexport default PasswordInput;\n","import { ReactNode } from \"react\";\nimport Form, { FormProps } from \"../Form/Form\";\nimport Input from \"../Input/Input\";\nimport PasswordInput from \"../PasswordInput/PasswordInput\";\n\ntype Values = {\n  username: string;\n  password: string;\n};\n\ntype Props = Omit<FormProps<Values>, \"children\"> & {\n  controls: ReactNode;\n};\n\nconst LoginForm = ({ controls, ...formProps }: Props) => {\n  return (\n    <Form {...formProps}>\n      {() => (\n        <>\n          <Form.Item label=\"Логин\" name=\"username\">\n            <Input placeholder=\"admin\" />\n          </Form.Item>\n          <Form.Item label=\"Пароль\" name=\"password\">\n            <PasswordInput placeholder=\"****\" />\n          </Form.Item>\n          {controls}\n        </>\n      )}\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","const TOKEN_KEY = \"token\";\n\nexport const getUserToken = (): string => localStorage.getItem(TOKEN_KEY) ?? \"\";\n\nexport const setUserToken = (token: string): void =>\n  localStorage.setItem(TOKEN_KEY, token);\n","import { useState } from \"react\";\nimport { getUserToken, setUserToken } from \"utils/token\";\n\ninterface IUseToken {\n  (): [string, (token: string) => void];\n}\n\nconst useToken: IUseToken = () => {\n  const [token, setToken] = useState(getUserToken());\n\n  const setTokenWrapper = (token: string): void => {\n    setToken(token);\n    setUserToken(token);\n  };\n\n  return [token, setTokenWrapper];\n};\n\nexport default useToken;\n","import useToken from \"hooks/useToken\";\nimport { createContext, useContext } from \"react\";\n\ntype IContext = {\n  token: string;\n  setToken: (token: string) => void;\n};\n\ntype ProviderProps = {\n  children: React.ReactNode;\n};\n\nconst Context = createContext<IContext>({} as any);\n\nexport const useTokenContext = () => useContext(Context);\n\nexport const TokenProvider = ({ children }: ProviderProps) => {\n  const [token, setToken] = useToken();\n\n  return (\n    <Context.Provider value={{ token, setToken }}>{children}</Context.Provider>\n  );\n};\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport { getUserToken } from \"./token\";\n\nconst api = axios.create({\n  baseURL: process.env[\"REACT_APP_API_URL\"],\n});\n\nexport const request = async <R>(config: AxiosRequestConfig): Promise<R> => {\n  try {\n    const token = getUserToken();\n\n    config = {\n      ...config,\n      headers: {\n        ...config.headers,\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const resp = await api(config);\n\n    return resp.data as R;\n  } catch (error) {\n    throw error;\n  }\n};\n","import { useState } from \"react\";\nimport { AxiosRequestConfig } from \"axios\";\nimport { request } from \"utils/request\";\n\nexport type RequestState<ResponseType> = {\n  response: ResponseType | null;\n  error: Error | null;\n  isLoading: boolean;\n};\n\ntype Args<RequestType> = {\n  axiosRequestConfig: (req: RequestType) => AxiosRequestConfig;\n  onError?: (req: RequestType, err: Error) => void;\n  onSuccess?: (req: RequestType) => void;\n};\n\nconst INITIAL_STATE: RequestState<any> = {\n  response: null,\n  error: null,\n  isLoading: false,\n};\n\nconst useRequest = <Req, Res>({\n  axiosRequestConfig,\n  onError,\n  onSuccess,\n}: Args<Req>): [RequestState<Res>, (req: Req) => Promise<void>] => {\n  const [state, setState] = useState(INITIAL_STATE);\n\n  const call = async (req: Req) => {\n    setState((prev) => ({ ...prev, isLoading: true }));\n    try {\n      const res = await request<Res>(axiosRequestConfig(req));\n      setState({\n        response: res,\n        isLoading: false,\n        error: null,\n      });\n      if (typeof onSuccess === \"function\") {\n        onSuccess(req);\n      }\n    } catch (err: any) {\n      setState({\n        response: null,\n        isLoading: false,\n        error: err,\n      });\n      if (typeof onError === \"function\") {\n        onError(req, err);\n      }\n    }\n  };\n  return [state, call];\n};\n\nexport default useRequest;\n","import useRequest from \"./useRequest\";\n\ntype Req = {\n  username: string;\n  password: string;\n};\n\ntype Res = {\n  access_token: string;\n};\n\nconst useLogin = () =>\n  useRequest<Req, Res>({\n    axiosRequestConfig: (data) => ({\n      url: \"/auth/login\",\n      method: \"POST\",\n      data,\n    }),\n  });\n\nexport default useLogin;\n","export default __webpack_public_path__ + \"static/media/check.c6233f6a.svg\";","export default __webpack_public_path__ + \"static/media/cross.dd287d17.svg\";","import check from \"assets/check.svg\";\nimport cross from \"assets/cross.svg\";\nimport { joinClassNames } from \"utils/utils\";\nimport \"./styles.css\";\n\ntype AlertType = \"success\" | \"error\";\n\ntype Props = {\n  type: AlertType;\n  className?: string;\n  children: React.ReactNode;\n};\n\nconst Alert = ({ type, className, children }: Props) => {\n  return (\n    <div className={joinClassNames(\"alert\", className, `alert_${type}`)}>\n      <div className={joinClassNames(\"alert__icon\", `alert__icon_${type}`)}>\n        <img\n          src={type === \"success\" ? check : cross}\n          alt={type === \"success\" ? \"check\" : \"cross\"}\n        />\n      </div>\n      <div className=\"alert__content\">{children}</div>\n    </div>\n  );\n};\n\nexport default Alert;\n","export default __webpack_public_path__ + \"static/media/logo.07abb1c1.svg\";","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"components/Button/Button\";\nimport LoginForm from \"components/login/LoginForm\";\nimport { useTokenContext } from \"contexts/Token\";\nimport useLogin from \"hooks/useLogin\";\nimport Alert from \"components/Alert/Alert\";\nimport logo from \"assets/logo.svg\";\nimport \"./styles/login.css\";\n\nfunction LoginPage() {\n  const history = useHistory();\n  const { token, setToken } = useTokenContext();\n  const [loginState, login] = useLogin();\n\n  useEffect(() => {\n    if (loginState.response) setToken(loginState.response.access_token);\n  }, [loginState]);\n\n  useEffect(() => {\n    if (token) history.push(\"/schemas\");\n  }, [token]);\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login\">\n        <img src={logo} alt=\"logo\" className=\"login__logo\" />\n        <h3 className=\"heading-3 login__title\">Вход</h3>\n        <LoginForm\n          className=\"login-form\"\n          initialValues={{ username: \"\", password: \"\" }}\n          onSubmit={login}\n          controls={\n            <div className=\"login-form__controls\">\n              <Button htmlType=\"submit\" disabled={loginState.isLoading}>\n                {loginState.isLoading ? \"Входим...\" : \"Войти\"}\n              </Button>\n            </div>\n          }\n        />\n        {loginState.error && (\n          <Alert className=\"login__error\" type=\"error\">\n            Не удалось войти\n          </Alert>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import logo from \"assets/logo.svg\";\nimport { useTokenContext } from \"contexts/Token\";\nimport { useLocation } from \"react-router\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { joinClassNames } from \"utils/utils\";\nimport \"./styles.css\";\n\nconst Navbar = () => {\n  const { setToken } = useTokenContext();\n  return (\n    <div className=\"navbar-container\">\n      <div className=\"navbar\">\n        <div className=\"navbar-links\">\n          <div className=\"navbar-links__group\">\n            <img src={logo} alt=\"logo\" className=\"navbar__logo\" />\n            <Link to=\"/schemas\">Мои схемы</Link>\n            <Link to=\"/schemas/new\">Создать схему</Link>\n          </div>\n          <div className=\"navbar-links__group\">\n            <span className=\"navbar__link\" onClick={() => setToken(\"\")}>\n              Выйти\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction Link({ to, children }: { to: string; children: React.ReactNode }) {\n  const { pathname } = useLocation();\n  const isActive = pathname === to;\n\n  return (\n    <RouterLink\n      to={to}\n      className={joinClassNames(\n        \"navbar__link\",\n        isActive && \"navbar__link_active\"\n      )}\n    >\n      {children}\n    </RouterLink>\n  );\n}\n\nexport default Navbar;\n","import { Link } from \"react-router-dom\";\nimport { ApiSchema } from \"types/schema\";\nimport { joinClassNames } from \"utils/utils\";\nimport \"./styles.css\";\n\ntype Props = {\n  className?: string;\n  schemas: ApiSchema[];\n};\n\nconst SchemasList = ({ className, schemas }: Props) => {\n  return (\n    <div className={joinClassNames(\"schemas-list\", className)}>\n      {schemas.map((schema) => (\n        <div key={schema.id} className=\"schemas-list__item\">\n          <Link to={`/schemas/${schema.id}`}>{schema.name}</Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SchemasList;\n","import { ApiSchema } from \"types/schema\";\n\nexport const getSchemasFromLocalStorage = () => {\n  const rawLocalSchemas = localStorage.getItem(\"schemas\") ?? \"[]\";\n  return JSON.parse(rawLocalSchemas) as ApiSchema[];\n};\n\nexport const setSchemasToLocalStorage = (schema: ApiSchema) => {\n  const schemas = getSchemasFromLocalStorage();\n  const updatedSchemas = [...schemas, schema];\n\n  localStorage.setItem(\"schemas\", JSON.stringify(updatedSchemas));\n};\n","import { RequestState } from \"hooks/useRequest\";\nimport { useState } from \"react\";\nimport { ApiSchema } from \"types/schema\";\nimport { getSchemasFromLocalStorage } from \"utils/localStorageSchemas\";\nimport { sleep } from \"utils/utils\";\n\ntype State = RequestState<ApiSchema[]>;\n\nconst initialState: State = {\n  response: null,\n  error: null,\n  isLoading: false,\n};\n\n// mocked because of CORS error\nconst useGetSchemas = (): [State, () => Promise<void>] => {\n  const [state, setState] = useState<State>(initialState);\n\n  const getSchemas = async () => {\n    setState((prev) => ({ ...prev, isLoading: true }));\n\n    await sleep(500);\n\n    const schemas = getSchemasFromLocalStorage();\n    setState((prev) => ({ ...prev, response: schemas, isLoading: false }));\n  };\n\n  return [state, getSchemas];\n};\n\nexport default useGetSchemas;\n","import { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"components/Navbar/Navbar\";\nimport Button from \"components/Button/Button\";\nimport SchemasList from \"components/schemas/List/List\";\nimport useGetSchemas from \"hooks/schemas/useGetSchemas\";\nimport \"pages/styles/schemas/index.css\";\n\nfunction SchemasPage() {\n  const [state, getSchemas] = useGetSchemas();\n\n  useEffect(() => {\n    getSchemas();\n  }, []);\n\n  const schemas = state.response ?? [];\n\n  return (\n    <div className=\"schemas-page\">\n      <Navbar />\n      <div className=\"content\">\n        <h2 className=\"heading-2\">Мои схемы</h2>\n        {state.isLoading ? (\n          <p>Загрузка...</p>\n        ) : (\n          <SchemasList\n            schemas={schemas}\n            className=\"schemas-page__schemas-list\"\n          />\n        )}\n        <Link to=\"schemas/new\">\n          <Button>Создать схему</Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default SchemasPage;\n","export default __webpack_public_path__ + \"static/media/arrow.ce7aa419.svg\";","import React, { FC, ReactElement, useState } from \"react\";\nimport arrow from \"assets/arrow.svg\";\nimport { joinClassNames } from \"utils/utils\";\nimport \"./styles.css\";\n\ntype Props = {\n  className?: string;\n  defaultOpened?: string[];\n  children: ReactElement<ItemProps>[];\n};\n\ntype IAccordion = FC<Props> & {\n  Item: FC<ItemProps>;\n};\n\nconst Accordion: IAccordion = ({\n  className,\n  defaultOpened = [],\n  children,\n}: Props) => {\n  const [openedItems, setOpenedItems] = useState<string[]>(defaultOpened);\n\n  const openItem = (id: string) => setOpenedItems((prev) => [...prev, id]);\n  const closeItem = (id: string) =>\n    setOpenedItems((prev) => prev.filter((i) => i !== id));\n\n  return (\n    <div className={joinClassNames(\"accordion\", className)}>\n      {children.map((item) => {\n        const { id } = item.props;\n\n        const isOpened = openedItems.includes(id);\n        const onClick = () => (isOpened ? closeItem(id) : openItem(id));\n\n        return (\n          <div key={id}>\n            {React.cloneElement(item, {\n              ...item.props,\n              isOpened,\n              onClick,\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\ntype Title = React.ReactNode | { (isOpened: boolean): React.ReactNode };\n\ntype ItemProps = {\n  id: string;\n  isOpened?: boolean;\n  title: Title;\n  extra?: React.ReactNode;\n  className?: string;\n  children: React.ReactNode;\n  onClick?: () => void;\n};\n\nconst AccordionItem: FC<ItemProps> = ({\n  isOpened,\n  title,\n  extra,\n  className,\n  children,\n  onClick,\n}: ItemProps) => {\n  return (\n    <div\n      className={joinClassNames(\n        \"accordion-item\",\n        className,\n        isOpened && \"accordion-item_opened\"\n      )}\n    >\n      <div className=\"accordion-item__header\" onClick={onClick}>\n        <div className=\"accordion-item-title\">\n          <img\n            src={arrow}\n            alt=\"arrow\"\n            className={joinClassNames(\n              \"accordion-item-title__arrow\",\n              isOpened && \"accordion-item-title__arrow_opened\"\n            )}\n          />\n          {typeof title === \"function\" ? title(!!isOpened) : title}\n        </div>\n        <div className=\"accordion-item__extra\">{extra}</div>\n      </div>\n      <div\n        className={joinClassNames(\n          \"accordion-item__body\",\n          isOpened && \"accordion-item__body_opened\"\n        )}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nAccordion.Item = AccordionItem;\n\nexport default Accordion;\n","import { MutableRefObject, useEffect } from \"react\";\n\nconst useOnOutsideClick = (\n  ref: MutableRefObject<HTMLElement | null>,\n  onOutsideClick: (e: MouseEvent) => void\n) => {\n  useEffect(() => {\n    const handleClick = (e: MouseEvent) => {\n      if (ref.current && !ref.current.contains(e.target as Node)) {\n        onOutsideClick(e);\n      }\n    };\n\n    document.addEventListener(\"click\", handleClick);\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  }, [ref, onOutsideClick]);\n};\n\nexport default useOnOutsideClick;\n","import { FC, useRef } from \"react\";\nimport arrow from \"assets/arrow.svg\";\nimport { joinClassNames } from \"utils/utils\";\nimport useBoolean from \"hooks/useBoolean\";\nimport useOnOutsideClick from \"hooks/useOnOutsideClick\";\nimport \"./styles.css\";\n\nexport type Option = {\n  label: string;\n  value: string;\n};\n\nexport type SelectProps = {\n  selected?: string;\n  options: Option[];\n  placeholder: string;\n  isInvalid?: boolean;\n  onSelect?: (option: string) => void;\n};\n\nconst Select: FC<SelectProps> = ({\n  options,\n  selected: selectedValue,\n  placeholder,\n  isInvalid,\n  onSelect,\n}: SelectProps) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [isOpened, setOpened] = useBoolean();\n\n  useOnOutsideClick(ref, setOpened.off);\n\n  const selected = options.find((o) => o.value === selectedValue);\n\n  return (\n    <div ref={ref} className=\"select\">\n      <div\n        className={joinClassNames(\n          \"select__header\",\n          isInvalid && \"select__header_error\",\n          isOpened && \"select__header_opened\"\n        )}\n        onClick={setOpened.toggle}\n      >\n        {selected ? (\n          <div className=\"select__value\">{selected.label}</div>\n        ) : (\n          <div\n            className={joinClassNames(\n              \"select__placeholder\",\n              isInvalid && \"select__placeholder_error\"\n            )}\n          >\n            {placeholder}\n          </div>\n        )}\n        <img src={arrow} alt=\"arrow\" />\n      </div>\n      {isOpened && (\n        <div\n          className={joinClassNames(\n            \"select__body\",\n            isInvalid && \"select__body_error\"\n          )}\n        >\n          {options.map((option) => {\n            const isSelected = option.value === selectedValue;\n            const clickHandler = () => {\n              onSelect?.(isSelected ? \"\" : option.value);\n              // '' to reset selected value\n              setOpened.off();\n            };\n\n            return (\n              <OptionItem\n                {...option}\n                key={option.value}\n                isSelected={isSelected}\n                onClick={clickHandler}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\ntype OptionProps = Option & {\n  isSelected: boolean;\n  onClick: () => void;\n};\n\nfunction OptionItem({ label, value, isSelected, onClick }: OptionProps) {\n  return (\n    <div\n      key={value}\n      onClick={onClick}\n      className={joinClassNames(\n        \"select__option\",\n        isSelected && \"select__option_active\"\n      )}\n    >\n      {label}\n    </div>\n  );\n}\n\nexport default Select;\n","import { FieldType } from \"types/schema\";\n\nexport const translateFieldType = (type: FieldType): string => {\n  switch (type) {\n    case \"string\":\n      return \"Текстовое поле\";\n    case \"number\":\n      return \"Числовое поле\";\n    case \"password\":\n      return \"Пароль\";\n    case \"checkbox\":\n      return \"Чекбокс\";\n    case \"phone\":\n      return \"Номер телефона\";\n    case \"select\":\n      return \"Выпадающий список\";\n    default:\n      return type;\n  }\n};\n","import { FC } from \"react\";\nimport { FieldType } from \"types/schema\";\nimport Select, { SelectProps } from \"../../Select/Select\";\nimport { translateFieldType } from \"./utils\";\n\nconst TYPES: FieldType[] = [\n  \"string\",\n  \"number\",\n  \"password\",\n  \"checkbox\",\n  \"phone\",\n  \"select\",\n];\n\nconst FieldTypeSelect: FC<Omit<SelectProps, \"options\">> = (props) => {\n  return (\n    <Select\n      {...props}\n      options={TYPES.map((type) => ({\n        label: translateFieldType(type),\n        value: type,\n      }))}\n    />\n  );\n};\n\nexport default FieldTypeSelect;\n","import { useEffect } from \"react\";\nimport { FieldOption, Schema } from \"types/schema\";\nimport Button from \"../../Button/Button\";\nimport FormItem from \"../../Form/Item\";\nimport FormList from \"../../Form/List\";\nimport Input from \"../../Input/Input\";\nimport { useFormContext } from \"contexts/Form\";\nimport getByPath from \"lodash.get\";\nimport cross from \"assets/cross.svg\";\nimport \"./styles.css\";\n\ntype Props = {\n  basePath: string;\n};\n\nconst OptionsList = ({ basePath }: Props) => {\n  const { errors, helpers } = useFormContext<Schema>();\n\n  const optionsErrors = getByPath(errors, `${basePath}.options`) as\n    | string\n    | FieldOption[];\n\n  const isInvalidOption = Array.isArray(optionsErrors)\n    ? optionsErrors.some((o) => o.key || o.value)\n    : false;\n\n  useEffect(() => {\n    return () => {\n      helpers.setError(`${basePath}.options` as keyof Schema, \"\");\n      // to avoid validation after unmount\n    };\n  }, []);\n\n  return (\n    <FormList<FieldOption> name={`${basePath}.options`}>\n      {({ items, push, remove }) => {\n        const isRemoveAvailable = items.length > 1;\n\n        return (\n          <div className=\"options-list\">\n            {items.map((item, idx) => {\n              const isDuplicate = (key: keyof FieldOption, val: string) =>\n                !!items.find(\n                  (o, i) =>\n                    idx !== i && o[key].toLowerCase() === val.toLowerCase()\n                );\n\n              return (\n                <div key={idx} className=\"options-list-item\">\n                  <FormItem\n                    name={`${basePath}.options[${idx}].key`}\n                    schema={{\n                      type: \"string\",\n                      required: true,\n                      validate: (val: string) =>\n                        isDuplicate(\"key\", val)\n                          ? \"Такой ключ уже существует\"\n                          : \"\",\n                    }}\n                  >\n                    <Input placeholder=\"Ключ\" />\n                  </FormItem>\n                  <FormItem\n                    name={`${basePath}.options[${idx}].value`}\n                    schema={{\n                      type: \"string\",\n                      required: true,\n                      validate: (val: string) =>\n                        isDuplicate(\"value\", val)\n                          ? \"Такое название уже существует\"\n                          : \"\",\n                    }}\n                  >\n                    <Input placeholder=\"Название\" />\n                  </FormItem>\n                  {isRemoveAvailable && (\n                    <img\n                      src={cross}\n                      alt=\"cross\"\n                      className=\"options-list-item__cross\"\n                      onClick={() => remove(idx)}\n                    />\n                  )}\n                </div>\n              );\n            })}\n            <Button\n              htmlType=\"button\"\n              type=\"secondary\"\n              className=\"options-list__button\"\n              disabled={isInvalidOption}\n              onClick={() => push({ key: \"\", value: \"\" })}\n            >\n              Новый вариант\n            </Button>\n          </div>\n        );\n      }}\n    </FormList>\n  );\n};\n\nexport default OptionsList;\n","import { FieldType, SchemaField } from \"types/schema\";\nimport FieldTypeSelect from \"./FieldTypeSelect/FieldTypeSelect\";\nimport Form from \"../Form/Form\";\nimport Input from \"../Input/Input\";\nimport OptionsList from \"./FieldOptionsList/OptionsList\";\n\nexport type ISchemaFieldForm = Omit<SchemaField, \"validation\">;\n\ntype Props = {\n  basePath: string;\n  type: FieldType;\n};\n\nconst FieldRequiredItems = ({ basePath, type }: Props) => {\n  const isSelect = type === \"select\";\n  return (\n    <>\n      <Form.Item\n        name={`${basePath}.key`}\n        label=\"Ключ свойства\"\n        schema={{ type: \"string\", required: true }}\n      >\n        <Input placeholder=\"Укажите ключ свойства\" />\n      </Form.Item>\n      <Form.Item\n        name={`${basePath}.label`}\n        label=\"Название свойства\"\n        schema={{ type: \"string\", required: true }}\n      >\n        <Input placeholder=\"Укажите название свойства\" />\n      </Form.Item>\n      <Form.Item\n        name={`${basePath}.type`}\n        label=\"Поле для отображения\"\n        schema={{ type: \"select\", required: true }}\n        valuePropName=\"selected\"\n        trigger=\"onSelect\"\n      >\n        <FieldTypeSelect placeholder=\"Выберите поле для отображения\" />\n      </Form.Item>\n      {isSelect && <OptionsList basePath={basePath} />}\n    </>\n  );\n};\n\nexport default FieldRequiredItems;\n","import { FC } from \"react\";\nimport Input, { InputProps } from \"./Input/Input\";\n\ntype Props = Omit<InputProps, \"type\" | \"onChange\"> & {\n  onChange?: (value: number) => void;\n};\n\nconst NumberInput: FC<Props> = ({ onChange, ...props }: Props) => {\n  return (\n    <Input\n      type=\"number\"\n      onChange={(e) => onChange?.(+e.currentTarget.value)}\n      {...props}\n    />\n  );\n};\n\nexport default NumberInput;\n","import { FC, HTMLProps } from \"react\";\nimport { joinClassNames } from \"utils/utils\";\nimport \"./styles.css\";\n\ntype Props = HTMLProps<HTMLLabelElement>;\n\nconst InlineLabel: FC<Props> = ({ className, disabled, ...props }: Props) => {\n  return (\n    <label\n      className={joinClassNames(\n        \"inline-label\",\n        disabled && \"inline-label_disabled\",\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nexport default InlineLabel;\n","import { joinClassNames } from \"utils/utils\";\nimport \"./styles.css\";\nimport InlineLabel from \"components/InlineLabel/InlineLabel\";\n\ntype Props = {\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switch = ({ label, checked, disabled, onCheck }: Props) => {\n  return (\n    <div className=\"switch-container\">\n      <button\n        type=\"button\"\n        disabled={disabled}\n        onClick={() => onCheck?.(!checked)}\n        className={joinClassNames(\n          \"switch\",\n          checked && \"switch_checked\",\n          checked && disabled && \"switch_disabled-checked\",\n          !checked && disabled && \"switch_disabled\"\n        )}\n      >\n        <div\n          className={joinClassNames(\n            \"switch__indicator\",\n            checked && \"switch__indicator_checked\"\n          )}\n        />\n      </button>\n      <InlineLabel disabled={disabled}>{label}</InlineLabel>\n    </div>\n  );\n};\n\nexport default Switch;\n","import { ValidationItems } from \"components/schemas[new]/SchemaField/SchemaField\";\nimport Form from \"../Form/Form\";\nimport NumberInput from \"../NumberInput\";\nimport Switch from \"../Switch/Switch\";\n\nconst NumberValidation: ValidationItems = ({ basePath }) => {\n  return (\n    <>\n      <Form.Item\n        name={`${basePath}.required`}\n        valuePropName=\"checked\"\n        trigger=\"onCheck\"\n      >\n        <Switch label=\"Обязательно для заполнения\" />\n      </Form.Item>\n      <Form.Item name={`${basePath}.min`} label=\"Мин. значение\">\n        <NumberInput />\n      </Form.Item>\n      <Form.Item name={`${basePath}.max`} label=\"Макс. значение\">\n        <NumberInput />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default NumberValidation;\n","import { ValidationItems } from \"components/schemas[new]/SchemaField/SchemaField\";\nimport Form from \"../Form/Form\";\nimport Switch from \"../Switch/Switch\";\n\nconst PhoneValidation: ValidationItems = ({ basePath }) => {\n  return (\n    <Form.Item\n      name={`${basePath}.required`}\n      valuePropName=\"checked\"\n      trigger=\"onCheck\"\n    >\n      <Switch label=\"Обязательно для заполнения\" />\n    </Form.Item>\n  );\n};\n\nexport default PhoneValidation;\n","import { ValidationItems } from \"components/schemas[new]/SchemaField/SchemaField\";\nimport Form from \"../Form/Form\";\nimport Switch from \"../Switch/Switch\";\n\nconst SelectValidation: ValidationItems = ({ basePath }) => {\n  return (\n    <Form.Item\n      name={`${basePath}.required`}\n      valuePropName=\"checked\"\n      trigger=\"onCheck\"\n    >\n      <Switch label=\"Обязательно для заполнения\" />\n    </Form.Item>\n  );\n};\n\nexport default SelectValidation;\n","import { ValidationItems } from \"components/schemas[new]/SchemaField/SchemaField\";\nimport Form from \"../../Form/Form\";\nimport Input from \"../../Input/Input\";\nimport NumberInput from \"../../NumberInput\";\nimport Switch from \"../../Switch/Switch\";\nimport \"./styles.css\";\n\nconst StringValidation: ValidationItems = ({ basePath }) => {\n  return (\n    <div className=\"string-validation-form\">\n      <Form.Item\n        name={`${basePath}.required`}\n        valuePropName=\"checked\"\n        trigger=\"onCheck\"\n      >\n        <Switch label=\"Обязательно для заполнения\" />\n      </Form.Item>\n      <div className=\"string-validation-form__min-max\">\n        <Form.Item name={`${basePath}.min`} label=\"Мин. кол-во символов\">\n          <NumberInput />\n        </Form.Item>\n        <Form.Item name={`${basePath}.max`} label=\"Макс. кол-во символов\">\n          <NumberInput />\n        </Form.Item>\n      </div>\n      <Form.Item name={`${basePath}.pattern`} label=\"Шаблон ввода\">\n        <Input />\n      </Form.Item>\n    </div>\n  );\n};\n\nexport default StringValidation;\n","import { ValidationItems } from \"components/schemas[new]/SchemaField/SchemaField\";\nimport Form from \"../Form/Form\";\nimport Switch from \"../Switch/Switch\";\n\nconst CheckboxValidation: ValidationItems = ({ basePath }) => {\n  return (\n    <Form.Item\n      name={`${basePath}.required`}\n      valuePropName=\"checked\"\n      trigger=\"onCheck\"\n    >\n      <Switch label=\"Обязательно для заполнения\" />\n    </Form.Item>\n  );\n};\n\nexport default CheckboxValidation;\n","import { FC } from \"react\";\nimport { FieldType, Schema } from \"types/schema\";\nimport FieldRequiredItems from \"components/schemas[new]/FieldRequiredItems\";\nimport { useFormContext } from \"contexts/Form\";\nimport { getValidationItemsByType } from \"./utils\";\nimport getByPath from \"lodash.get\";\nimport \"./styles.css\";\n\nexport type ValidationItems = FC<{ basePath: string }>;\n\ntype Props = {\n  basePath: string;\n};\n\nconst SchemaFieldComponent = ({ basePath }: Props) => {\n  const { values } = useFormContext<Schema>();\n  const type = getByPath(values, `${basePath}.type`) as FieldType;\n\n  const ValidationItems = getValidationItemsByType(type);\n\n  return (\n    <div className=\"schema-field\">\n      <div className=\"schema-field__required\">\n        <FieldRequiredItems basePath={basePath} type={type} />\n      </div>\n      <div className=\"schema-field__validation\">\n        <ValidationItems basePath={`${basePath}.validation`} />\n      </div>\n    </div>\n  );\n};\n\nexport default SchemaFieldComponent;\n","import { ValidationItems } from \"components/schemas[new]/SchemaField/SchemaField\";\nimport { FieldType } from \"types/schema\";\nimport NumberValidation from \"components/schemas[new]/NumberValidation\";\nimport PhoneValidation from \"components/schemas[new]/PhoneValidation\";\nimport SelectValidation from \"components/schemas[new]/SelectValidation\";\nimport StringValidation from \"components/schemas[new]/StringValidation/StringValidation\";\nimport CheckboxValidation from \"components/schemas[new]/CheckboxValidation\";\n\nexport const getValidationItemsByType = (type: FieldType): ValidationItems => {\n  switch (type) {\n    case \"string\":\n    case \"password\":\n      return StringValidation;\n    case \"number\":\n      return NumberValidation;\n    case \"phone\":\n      return PhoneValidation;\n    case \"checkbox\":\n      return CheckboxValidation;\n    case \"select\":\n      return SelectValidation;\n    default:\n      return () => null;\n  }\n};\n","export default __webpack_public_path__ + \"static/media/delete.53330300.svg\";","import { Schema, SchemaField } from \"types/schema\";\nimport Accordion from \"components/Accordion/Accordion\";\nimport SchemaFieldComponent from \"components/schemas[new]/SchemaField/SchemaField\";\nimport { useFormContext } from \"contexts/Form\";\nimport { translateFieldType } from \"components/schemas[new]/FieldTypeSelect/utils\";\nimport { flatObj, joinClassNames } from \"utils/utils\";\nimport deleteIco from \"assets/delete.svg\";\nimport getByPath from \"lodash.get\";\nimport \"./styles.css\";\n\ntype Props = {\n  className?: string;\n  fields: SchemaField[];\n  removeField: (idx: number) => void;\n};\n\nconst FieldsAccordion = ({ className, fields, removeField }: Props) => {\n  const { errors, touched } = useFormContext<Schema>();\n  const isRemoveAvailable = fields.length > 1;\n\n  return (\n    <Accordion className={className}>\n      {fields.map((field, idx) => {\n        const fieldErrs = errors.fields?.[idx] ?? {};\n        const isInvalid = Object.entries(flatObj(fieldErrs)).some(\n          ([path, error]) => {\n            const isTouched = getByPath(touched, `fields[${idx}].${path}`);\n            return error && isTouched;\n          }\n        );\n\n        return (\n          <Accordion.Item\n            key={idx}\n            id={idx.toString()}\n            className=\"fields-list-item\"\n            title={(isOpened) => (\n              <FieldHeader\n                field={field}\n                index={idx + 1}\n                isOpened={isOpened}\n                isInvalid={isInvalid}\n              />\n            )}\n            extra={\n              isRemoveAvailable && (\n                <img\n                  src={deleteIco}\n                  alt=\"delete\"\n                  onClick={() => removeField(idx)}\n                  className=\"fields-list-item__remove\"\n                />\n              )\n            }\n          >\n            <SchemaFieldComponent basePath={`fields[${idx}]`} />\n          </Accordion.Item>\n        );\n      })}\n    </Accordion>\n  );\n};\n\ntype HeaderProps = {\n  index: number;\n  field: SchemaField;\n  isOpened: boolean;\n  isInvalid: boolean;\n};\n\nfunction FieldHeader({ index, field, isOpened, isInvalid }: HeaderProps) {\n  return (\n    <div className=\"field-header\">\n      <div\n        className={joinClassNames(\n          \"field-header__main\",\n          isInvalid && !isOpened && \"field-header__main_invalid\"\n          // To see closed invalid fields\n        )}\n      >\n        Свойство {index}: {field.label}\n        {field.type && !isOpened && (\n          <p className=\"fields-list-item__subtitle\">\n            {translateFieldType(field.type)}; {field.key}\n          </p>\n        )}\n      </div>\n      <div className=\"fields-header__validation\">{isOpened && \"Валидация\"}</div>\n    </div>\n  );\n}\n\nexport default FieldsAccordion;\n","import { Schema, SchemaField } from \"types/schema\";\nimport { flatObj } from \"utils/utils\";\nimport Button from \"../../Button/Button\";\nimport FieldsAccordion from \"../FieldsAccordion/FieldsAccordion\";\nimport Form from \"../../Form/Form\";\nimport Input from \"../../Input/Input\";\nimport \"./styles.css\";\n\nconst BLANK_FIELD: SchemaField = {\n  key: \"\",\n  label: \"\",\n  type: \"string\",\n  validation: {},\n  options: [...[{ key: \"\", value: \"\" }]],\n};\n\nconst INITIAL_VALUES = {\n  name: \"\",\n  fields: [{ ...BLANK_FIELD }],\n};\n\ntype Props = {\n  initialValues?: Schema;\n  controls: React.ReactNode;\n  onSubmit: (values: Schema) => void;\n};\n\nconst NewSchemaForm = ({\n  initialValues = INITIAL_VALUES,\n  controls,\n  onSubmit,\n}: Props) => {\n  return (\n    <Form<Schema> initialValues={initialValues} onSubmit={onSubmit}>\n      {({ values, errors }) => {\n        const isInvalidField =\n          errors.fields &&\n          errors.fields.some((errs) =>\n            Object.values(flatObj(errs)).some((e) => !!e)\n          );\n\n        return (\n          <>\n            <Form.Item\n              name=\"name\"\n              label=\"Название схемы\"\n              className=\"schema-name\"\n              schema={{ type: \"string\", required: true }}\n            >\n              <Input />\n            </Form.Item>\n            <div className=\"divider\"></div>\n            <div className=\"schema-fields\">\n              <h2 className=\"heading-2\">Свойства схемы</h2>\n              <p className=\"schema-fields__subtitle\">\n                Схема должна содержать хотя бы одно свойство\n              </p>\n              <Form.List<SchemaField> name=\"fields\">\n                {({ items, push, remove }) => (\n                  <>\n                    <FieldsAccordion\n                      fields={items}\n                      removeField={remove}\n                      className=\"schema-fields__accordion\"\n                    />\n                    <div className=\"schema-fields__controls\">\n                      <Button\n                        htmlType=\"button\"\n                        type=\"secondary\"\n                        disabled={isInvalidField}\n                        onClick={() => push({ ...BLANK_FIELD })}\n                      >\n                        Добавить новое свойство\n                      </Button>\n                      {controls}\n                    </div>\n                  </>\n                )}\n              </Form.List>\n            </div>\n          </>\n        );\n      }}\n    </Form>\n  );\n};\n\nexport default NewSchemaForm;\n","import { RequestState } from \"hooks/useRequest\";\nimport { useState } from \"react\";\nimport { ApiSchema, Schema } from \"types/schema\";\nimport { setSchemasToLocalStorage } from \"utils/localStorageSchemas\";\nimport { sleep } from \"utils/utils\";\n\ntype State = RequestState<ApiSchema>;\n\nconst initialState: State = {\n  response: null,\n  error: null,\n  isLoading: false,\n};\n\n// mocked because of CORS error\nconst useCreateSchema = (): [State, (schema: Schema) => Promise<void>] => {\n  const [state, setState] = useState<State>(initialState);\n\n  const createSchema = async (schema: Schema) => {\n    setState((prev) => ({ ...prev, isLoading: true }));\n\n    await sleep(500);\n\n    const apiSchema: ApiSchema = { ...schema, id: Date.now() };\n    setSchemasToLocalStorage(apiSchema);\n\n    setState({\n      response: apiSchema,\n      isLoading: false,\n      error: schema ? null : new Error(\"Схема не найдена\"),\n    });\n  };\n\n  return [state, createSchema];\n};\n\nexport default useCreateSchema;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"components/Button/Button\";\nimport Navbar from \"components/Navbar/Navbar\";\nimport NewSchemaForm from \"components/schemas[new]/NewSchemaForm/NewSchemaForm\";\nimport useCreateSchema from \"hooks/schemas/useCreateSchema\";\n\nfunction NewSchemaPage() {\n  const history = useHistory();\n  const [state, createSchema] = useCreateSchema();\n\n  useEffect(() => {\n    if (state.response) history.push(`/schemas/${state.response.id}`);\n  }, [state]);\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"content\">\n        <NewSchemaForm\n          onSubmit={createSchema}\n          controls={\n            <Button disabled={state.isLoading}>\n              {state.isLoading ? \"Сохраняем...\" : \"Сохранить схему\"}\n            </Button>\n          }\n        />\n      </div>\n    </>\n  );\n}\n\nexport default NewSchemaPage;\n","import { RequestState } from \"hooks/useRequest\";\nimport { useState } from \"react\";\nimport { ApiSchema } from \"types/schema\";\nimport { getSchemasFromLocalStorage } from \"utils/localStorageSchemas\";\nimport { sleep } from \"utils/utils\";\n\ntype State = RequestState<ApiSchema>;\n\nconst initialState: State = {\n  response: null,\n  error: null,\n  isLoading: false,\n};\n\n// mocked because of CORS error\nconst useGetSchema = (): [State, (id: number) => Promise<void>] => {\n  const [state, setState] = useState<State>(initialState);\n\n  const getSchema = async (id: number) => {\n    setState((prev) => ({ ...prev, isLoading: true }));\n\n    await sleep(500);\n\n    const schemas = getSchemasFromLocalStorage();\n    const schema = schemas.find((s) => s.id === id) || null;\n\n    setState({\n      response: schema,\n      isLoading: false,\n      error: schema ? null : new Error(\"Схема не найдена\"),\n    });\n  };\n\n  return [state, getSchema];\n};\n\nexport default useGetSchema;\n","export default __webpack_public_path__ + \"static/media/checkmark.50c9829f.svg\";","import { joinClassNames } from \"utils/utils\";\nimport checkmark from \"assets/checkmark.svg\";\nimport \"./styles.css\";\nimport InlineLabel from \"components/InlineLabel/InlineLabel\";\n\ntype Props = {\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Checkbox = ({ label, checked, disabled, onCheck }: Props) => {\n  return (\n    <div className=\"checkbox-container\">\n      <div\n        className={joinClassNames(\"checkbox\", disabled && \"checkbox_disabled\")}\n      >\n        <input\n          className=\"checkbox__input\"\n          type=\"checkbox\"\n          checked={checked}\n          disabled={disabled}\n          onChange={(e) => onCheck?.(e.target.checked)}\n        />\n        <div className=\"checkbox__control\" />\n        <img src={checkmark} alt=\"checkmark\" className=\"checkbox__checkmark\" />\n      </div>\n      <InlineLabel disabled={disabled}>{label}</InlineLabel>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","import Checkbox from \"components/Checkbox/Checkbox\";\nimport FormItem from \"components/Form/Item\";\nimport Input from \"components/Input/Input\";\nimport NumberInput from \"components/NumberInput\";\nimport PasswordInput from \"components/PasswordInput/PasswordInput\";\nimport Select from \"components/Select/Select\";\nimport { SchemaField } from \"types/schema\";\n\ntype Props = { field: SchemaField };\n\nconst FieldFormItem = ({ field }: Props) => {\n  switch (field.type) {\n    case \"string\":\n      return (\n        <FormItem\n          name={field.key}\n          label={field.label}\n          schema={{ type: \"string\", ...field.validation }}\n        >\n          <Input placeholder={placeholderFromLabel(field.label)} />\n        </FormItem>\n      );\n    case \"password\":\n      return (\n        <FormItem\n          name={field.key}\n          label={field.label}\n          schema={{ type: \"string\", ...field.validation }}\n        >\n          <PasswordInput placeholder={placeholderFromLabel(field.label)} />\n        </FormItem>\n      );\n    case \"phone\":\n      return (\n        <FormItem\n          name={field.key}\n          label={field.label}\n          schema={{ type: \"phone\", ...field.validation }}\n        >\n          <Input placeholder={placeholderFromLabel(field.label)} />\n        </FormItem>\n      );\n    case \"number\":\n      return (\n        <FormItem\n          name={field.key}\n          label={field.label}\n          schema={{ type: \"number\", ...field.validation }}\n        >\n          <NumberInput placeholder={placeholderFromLabel(field.label)} />\n        </FormItem>\n      );\n    case \"select\":\n      return (\n        <FormItem\n          name={field.key}\n          label={field.label}\n          schema={{ type: \"select\", ...field.validation }}\n          valuePropName=\"selected\"\n          trigger=\"onSelect\"\n        >\n          <Select\n            placeholder={placeholderFromLabel(field.label)}\n            options={field.options!.map((option) => ({\n              label: option.value,\n              value: option.key,\n            }))}\n          />\n        </FormItem>\n      );\n    case \"checkbox\":\n      return (\n        <FormItem\n          name={field.key}\n          schema={{ type: \"checkbox\", ...field.validation }}\n          valuePropName=\"checked\"\n          trigger=\"onCheck\"\n        >\n          <Checkbox label={field.label} />\n        </FormItem>\n      );\n    default:\n      return null;\n  }\n};\n\nfunction placeholderFromLabel(label: string): string {\n  return `Введите ${label.toLowerCase()}`;\n}\n\nexport default FieldFormItem;\n","import { ReactNode } from \"react\";\nimport { Schema } from \"types/schema\";\nimport { FormErrors } from \"hooks/useForm\";\nimport Form from \"components/Form/Form\";\nimport FieldFormItem from \"./FieldFormItem\";\n\ntype Props = {\n  schema: Schema;\n  controls: ReactNode;\n  onSubmit: (values: any) => void;\n  onFail: (errors: FormErrors<any>) => void;\n};\n\nconst FormFromSchema = ({ schema, controls, onSubmit, onFail }: Props) => {\n  const { fields } = schema;\n\n  const initialValues: any = fields.reduce((acc, field) => {\n    acc[field.key] = undefined;\n    return acc;\n  }, {} as any);\n\n  return (\n    <Form<any>\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      onFail={onFail}\n    >\n      {() => (\n        <>\n          {fields.map((field) => (\n            <FieldFormItem key={field.key} field={field} />\n          ))}\n          {controls}\n        </>\n      )}\n    </Form>\n  );\n};\n\nexport default FormFromSchema;\n","import { useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router\";\nimport Navbar from \"components/Navbar/Navbar\";\nimport useGetSchema from \"hooks/schemas/useGetSchema\";\nimport \"pages/styles/schemas/[id].css\";\nimport Alert from \"components/Alert/Alert\";\nimport FormFromSchema from \"components/schemas[id]/FormFromSchema\";\nimport useBoolean from \"hooks/useBoolean\";\nimport Button from \"components/Button/Button\";\n\ntype Params = {\n  id: string;\n};\n\nconst SchemaPage = () => {\n  const [state, getSchema] = useGetSchema();\n  const { params } = useRouteMatch<Params>();\n  const [isValid, setIsValid] = useBoolean(false);\n  const [isInvalid, setIsInvalid] = useBoolean(false);\n\n  useEffect(() => {\n    getSchema(+params.id);\n  }, []);\n\n  const schema = state.response;\n\n  const submitHandler = () => {\n    setIsValid.on();\n    setIsInvalid.off();\n  };\n\n  const failHandler = () => {\n    setIsInvalid.on();\n    setIsValid.off();\n  };\n\n  return (\n    <div className=\"schema-page\">\n      <Navbar />\n      <div className=\"content\">\n        <div className=\"schema-page__container\">\n          {state.isLoading && \"Загрузка...\"}\n          {state.error && <Alert type=\"error\">{state.error.message}</Alert>}\n          {schema && (\n            <div className=\"schema-page-form\">\n              <h2 className=\"heading-2 schema-page-form__title\">\n                {schema.name}\n              </h2>\n              <FormFromSchema\n                schema={schema}\n                onSubmit={submitHandler}\n                onFail={failHandler}\n                controls={\n                  <Button className=\"schema-page-form__controls\">\n                    Валидация\n                  </Button>\n                }\n              />\n              {isValid && (\n                <Alert className=\"schema-page-form__alert\" type=\"success\">\n                  Валидация пройдена успешно!\n                </Alert>\n              )}\n              {isInvalid && (\n                <Alert className=\"schema-page-form__alert\" type=\"error\">\n                  Валидация не пройдена.\n                </Alert>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchemaPage;\n","import { useTokenContext } from \"contexts/Token\";\nimport { Route, RouteProps, Redirect } from \"react-router-dom\";\n\nconst AuthedRoute = ({ children, ...props }: RouteProps) => {\n  const { token } = useTokenContext();\n\n  return <Route {...props}>{token ? children : <Redirect to=\"/\" />}</Route>;\n};\n\nexport default AuthedRoute;\n","import { Switch, Route, HashRouter } from \"react-router-dom\";\nimport LoginPage from \"pages/login\";\nimport SchemasPage from \"pages/schemas\";\nimport NewSchemaPage from \"pages/schemas/new\";\nimport SchemaPage from \"pages/schemas/[id]\";\nimport AuthedRoute from \"components/AuthedRoute\";\nimport { TokenProvider } from \"contexts/Token\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <TokenProvider>\n          <HashRouter>\n            <Switch>\n              <Route exact path=\"/\">\n                <LoginPage />\n              </Route>\n              <AuthedRoute exact path=\"/schemas\">\n                <SchemasPage />\n              </AuthedRoute>\n              <AuthedRoute exact path=\"/schemas/new\">\n                <NewSchemaPage />\n              </AuthedRoute>\n              <AuthedRoute exact path=\"/schemas/:id\">\n                <SchemaPage />\n              </AuthedRoute>\n            </Switch>\n          </HashRouter>\n        </TokenProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}